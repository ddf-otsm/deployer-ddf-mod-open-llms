# Docker Development Environment Configuration
# Extends dev.yml with Docker-specific settings

environment: "development"
platform: "docker"

# Inherit from base dev config
extends: "dev.yml"

# Docker-specific settings
docker:
  compose_file: "secrets/deployments/docker/docker-compose-deployment.yml"
  build_context: "."
  dockerfile: "Dockerfile"
  target: "production"
  
  # Container settings
  containers:
    ai-testing-agent:
      image: "deployer-ddf-mod-llm-models:dev"
      container_name: "deployer-ddf-mod-llm-models-dev"
      ports:
        - "3000:3000"
      restart_policy: "unless-stopped"
      
    ollama:
      image: "ollama/ollama:latest"
      container_name: "ollama-server"
      ports:
        - "11434:11434"
      restart_policy: "unless-stopped"
      
    redis:
      image: "redis:7-alpine"
      container_name: "redis-cache"
      ports:
        - "6379:6379"
      restart_policy: "unless-stopped"

# Application settings (override from base)
app:
  name: "deployer-ddf-mod-llm-models"
  version: "1.0.0"
  port: 3000
  host: "0.0.0.0"  # Listen on all interfaces for Docker

# Authentication settings - DISABLED for development
auth:
  enabled: false  # Keep authentication disabled for development
  method: "none"
  
# Environment variables for Docker containers
environment_variables:
  NODE_ENV: "development"
  AUTH_DISABLED: "true"
  PORT: "3000"
  LOG_LEVEL: "debug"
  OLLAMA_HOST: "ollama:11434"

# Volume mappings
volumes:
  logs: "./logs:/app/logs"
  config: "./config:/app/config:ro"
  ollama_data: "ollama_data:/root/.ollama"
  redis_data: "redis_data:/data"

# Network settings
networks:
  ai-testing-network:
    driver: "bridge"
    name: "ai-testing-network"

# Health check settings
health_checks:
  ai-testing-agent:
    test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
    interval: "30s"
    timeout: "10s"
    retries: 3
    start_period: "40s"
    
  ollama:
    test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
    interval: "30s"
    timeout: "10s"
    retries: 3
    start_period: "60s"
    
  redis:
    test: ["CMD", "redis-cli", "ping"]
    interval: "30s"
    timeout: "10s"
    retries: 3

# Logging settings for Docker
logging:
  level: "DEBUG"  # More verbose for Docker development
  console: true
  file: false  # Use Docker logs instead
  docker_logs:
    enabled: true
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3" 