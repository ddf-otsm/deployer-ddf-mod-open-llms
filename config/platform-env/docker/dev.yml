# Docker Development Environment Configuration
# Used to generate docker-compose.yml via workflow_tasks/run.sh

environment: "development"
platform: "docker"

# Application settings
app:
  name: "deployer-ddf-mod-llm-models"
  version: "1.0.0"
  port: 3000
  host: "0.0.0.0"

# Docker-specific settings
docker:
  compose_version: "3.8"
  network_name: "ai-testing-network"
  
  # Main application service
  app_service:
    container_name: "deployer-ddf-mod-llm-models-dev"
    dockerfile: "config/docker/Dockerfile.node"
    target: "development"
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: "development"
      AUTH_DISABLED: "true"
      PORT: "3000"
      LOG_LEVEL: "debug"
      OLLAMA_HOST: "ollama:11434"
    volumes:
      - "./logs:/app/logs"
      - "./config:/app/config:ro"
      - "./src:/app/src:ro"  # Hot reload for development
    depends_on:
      - "ollama"
    restart: "unless-stopped"
    
  # LLM Service (Ollama)
  ollama_service:
    image: "ollama/ollama:latest"
    container_name: "ollama-server"
    ports:
      - "11434:11434"
    volumes:
      - "ollama_data:/root/.ollama"
    environment:
      OLLAMA_HOST: "0.0.0.0"
    restart: "unless-stopped"
    
  # Optional services for development
  redis_service:
    enabled: true
    image: "redis:7-alpine"
    container_name: "redis-cache"
    ports:
      - "6379:6379"
    volumes:
      - "redis_data:/data"
    restart: "unless-stopped"
    
  monitoring_service:
    enabled: false  # Disabled in dev for faster startup
    image: "prom/prometheus:latest"
    container_name: "prometheus-monitoring"
    ports:
      - "9090:9090"

# Health checks
health_checks:
  app:
    test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
    interval: "30s"
    timeout: "10s"
    retries: 3
    start_period: "40s"
    
  ollama:
    test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
    interval: "30s"
    timeout: "10s"
    retries: 3
    start_period: "60s"

# Volumes
volumes:
  - name: "ollama_data"
    driver: "local"
  - name: "redis_data"
    driver: "local"

# Networks
networks:
  - name: "ai-testing-network"
    driver: "bridge" 